% \iffalse meta-comment
%
%% File: propbox.dtx Copyright (C) 2013-2013 Sean Allred
%%
%% It may be distributed and/or modified under the conditions of the
%% LaTeX Project Public License (LPPL), either version 1.3c of this
%% license or (at your option) any later version.  The latest version
%% of this license is in the file
%%
%%    http://www.latex-project.org/lppl.txt
%%
%<*driver|package>
\RequirePackage{l3bootstrap}
\GetIdInfo$Id$
  {Boxes with Properties}
%</driver|package>
%<*driver>
\documentclass[full]{l3doc}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
% \def\fileversion{0}
% \def\filedate{2013\slash08\slash13}
% \def\releasedate{\meta{not released}}
%
% \title{^^A
%   The \pkg{propbox} package\\ Boxes with Properties^^A
%   \thanks{This file describes v0,
%      last revised \filedate.}^^A
% }
%
% \author{^^A
%  Sean Allred\thanks
%    {^^A
%      E-mail:
%        \href{mailto:seallred@smcm.edu}
%          {seallred@smcm.edu}^^A
%    }^^A
% }
%
% \date{Released \releasedate}
%
% \maketitle
%
% \begin{documentation}
% ^^A TODO: you know, your own documentation
% This is some cool stuff.
% The basic idea is this: have a sequence of boxes that you can use (all with generated names using \cs{newsavebox})
%   and then have their properties stored as an additional token list of nearly the same name.
% Then, when it comes time to retrieve the boxes, just iterate through the sequence and pick some that satisfy a given filter.
% \section{Properties}
% \subsection{Defining New Properties}

% \begin{function}[updated = 2013/08/11]{\DeclareBoxProperties}
%   \begin{syntax}
%     \cs{DeclareBoxProperties} \Arg{properties}
%   \end{syntax}
%   Declares the set of box properties as a comma-separated list.
% \end{function}

% \begin{function}[updated = 2013/08/11]{\NewBoxProperty}
%   \begin{syntax}
%     \cs{NewBoxProperty} \Arg{property}
%   \end{syntax}
%   Adds a \emph{single} key to the property list.
% \end{function}

% \begin{function}[updated = 2013/08/11]{\RemoveBoxProperty}
%   \begin{syntax}
%     \cs{RemoveBoxProperty} \Arg{property}
%   \end{syntax}
%   Removes a \emph{single} key from the property list.
% \end{function}

% \begin{function}[updated = 2013/08/11]{\ClearBoxProperties}
%   \begin{syntax}
%     \cs{ClearBoxProperties}
%   \end{syntax}
%   Removes \emph{all} keys from the property list.
% \end{function}

% \end{documentation}




% \begin{implementation}
%
% \section{\pkg{propbox} implementation}

%    \begin{macrocode}
%<*initex|package>
%    \end{macrocode}

%    \begin{macrocode}
%<@@=propbox>
%    \end{macrocode}

%    \begin{macrocode}
%<*package>
\ProvidesExplPackage
  {\ExplFileName}{\ExplFileDate}{\ExplFileVersion}{\ExplFileDescription}
\__expl_package_check:
%</package>
%    \end{macrocode}

%
%\subsection{Debugging}

% \begin{variable}{\g@@_debug_mode_bool}
%   This controls almost all log output, and will certainly clutter your log file if set.
%   When set, \pkg{propbox} will show the contents of internal sequences and keys throughout the compile.
%   It is probably hard to follow, so the usefulness of macros dependendent on this remains dubious.
%    \begin{macrocode}
\bool_new:N \g@@_debug_mode_bool
%    \end{macrocode}
% \end{variable}

% \subsection{Boxes}
% \begin{variable}{\g@@_boxes_seq}
%   Stores all of the boxes by name.
%   Remember that \cs{newsavebox} needs two parameters; it needs a single \meta{cs name} and its contents.
%   It is this \meta{cs name} that we are storing into this sequence.
%    \begin{macrocode}
\seq_new:N \g@@_boxes_seq
%    \end{macrocode}
% \end{variable}
% \subsection{Properties}

% \begin{variable}{\g@@_properties_tl}
%   This list contains all of the properties that are used for boxes along with their default values.
%   The expected value of this variable is \emph{at all times expected} to be a valid \pkg{l3keys} specification.
%   It should only be altered by \hyperref[doc/function//DeclareBoxProperties]{\cs{DeclareBoxProperties}} and friends.
%    \begin{macrocode}
\tl_new:N \g@@_properties_tl
%    \end{macrocode}
% \end{variable}

% \begin{macro}[updated = 2013/08/11]{\g@@_new_box:nn}
%   When creating a new box, care must be taken so that the new box and its properties are somehow associated with each other.
%   This function does so by generating a name for the box (whose content is given as |#1|) and then
%     using this generated name (say, \cs{gn}) for the box handle (as \cs{gn_box}) and property list, |#2|, as \cs{gn_prop} (using \pkg{l3prop}).
%   Thus, when retrieving the properties for a box, one only needs to append |_prop| to the control sequence to retrive that box's properties.
%    \begin{macrocode}
\cs_new_protected:Npn { \g@@_new_box:nn } #1 #2
 {
%    \end{macrocode}
%   Store the generated name into a local temporary token list.
%   (It gets very tedious, not to mention inefficient (because of \cs{seq_count:N}), to type out all the time.)
%    \begin{macrocode}
  \tl_set:Nn \l_tmpa_tl { propbox_box_number_  \seq_count:N \@@_boxes_seq  }
%    \end{macrocode}
%   Store the properties for this box in its own property list.
%   This way, the keys can be set easily and simply to determine whether or not to select the box.
%   The properties are stored as a property list that is checked with \cs{prop_get:NnN} during the filter stage.
%    \begin{macrocode}
  \tl_new:cn { g_ \l_tmpa_tl _properties }
  \tl_set:Nn \l_tmpa_tl { #1 }
  \clist_map_inline:Nn \l_tmpa_clist
   {
    \prop_put:Nnn \@@_properties_prop { ##1 } { ##2 }
   }
%    \end{macrocode}
%   Now the moment we've all been waiting for.
%   Create a new save box of the name \cs{propbox_box_number_$N$}
%     where $N$ is the current number of items in the collection.
%   ($N \in \left\{0\right\} \cup \mathbf{N}$.)
%   The |minipage| environment is used here to force page-wise sequential output only.^^A
%     \footnote{This package grew out of a question on the \TeX~Stack~Exchange site, and this seemed appropriate at the time.}
%    \begin{macrocode}
  \newsavebox { \l_tmpa_tl _box }
  \savebox { \l_tmpa_tl _box } {
    \begin{minipage}{\linewidth}
      #2
    \end{minipage}
  }
%    \end{macrocode}
%   After the box is saved, put its handle into the collection of boxes.
%   (Remember, the name of this handle is stored in \cs{l_tmpa_tl},
%     and the |v| argspec constructs a cs~name from the expanded value of \cs{l_tmpa_tl},
%     which holds the stem of our name.
%    \begin{macrocode}
  \seq_push:Nv \@@_boxes_seq
               { \l_tmpa_tl _box }
%    \end{macrocode}
%    \begin{macrocode}
 }
%    \end{macrocode}
% \end{macro}




% \subsection{Debugging Utilities}

% \begin{variable}{\@@_debug_mode_bool}
%   Create a toggle to turn on\slash off debug mode.
%    \begin{macrocode}
\bool_new:c { propbox_debug_mode_bool }
%    \end{macrocode}
% \end{variable}


%    \begin{macrocode}
%</initex|package>
%    \end{macrocode}
%
% \end{implementation}
%
% \PrintIndex