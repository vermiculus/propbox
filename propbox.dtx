% \iffalse meta-comment
%
%% File: propbox.dtx Copyright (C) 2013-2013 Sean Allred
%%
%% It may be distributed and/or modified under the conditions of the
%% LaTeX Project Public License (LPPL), either version 1.3c of this
%% license or (at your option) any later version.  The latest version
%% of this license is in the file
%%
%%    http://www.latex-project.org/lppl.txt
%%
%<*driver|package>
\RequirePackage{l3bootstrap}
\GetIdInfo$Id$
  {Boxes with Properties}
%</driver|package>
%<*driver>
\documentclass[full]{l3doc}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \title{^^A
%   The \pkg{propbox} package\\ Boxes with Properties^^A
%   \thanks{This file describes v\ExplFileVersion,
%      last revised \ExplFileDate.}^^A
% }
%
% \author{^^A
%  Sean Allred\thanks
%    {^^A
%      E-mail:
%        \href{mailto:seallred@smcm.edu}
%          {seallred@smcm.edu}^^A
%    }^^A
% }
%
% \date{Released \ExplFileDate}
%
% \maketitle
%
% \begin{documentation}
% ^^A TODO: you know, your own documentation
% This is some cool stuff.
% The basic idea is this: have a sequence of boxes that you can use (all with generated names using \cs{newsavebox})
%   and then have their properties stored as an additional token list of nearly the same name.
% Then, when it comes time to retrieve the boxes, just iterate through the sequence and pick some that satisfy a given filter.
% \section{Properties}
% \subsection{Defining New Properties}

% \begin{function}[updated = 2013/08/11]{\DeclareBoxProperties}
%   \begin{syntax}
%     \cs{DeclareBoxProperties} \Arg{properties}
%   \end{syntax}
%   Declares the set of box properties as a comma-separated list.
% \end{function}

% \begin{function}[updated = 2013/08/11]{\NewBoxProperty}
%   \begin{syntax}
%     \cs{NewBoxProperty} \Arg{property}
%   \end{syntax}
%   Adds a \emph{single} key to the property list.
% \end{function}

% \begin{function}[updated = 2013/08/11]{\RemoveBoxProperty}
%   \begin{syntax}
%     \cs{RemoveBoxProperty} \Arg{property}
%   \end{syntax}
%   Removes a \emph{single} key from the property list.
% \end{function}

% \begin{function}[updated = 2013/08/11]{\ClearBoxProperties}
%   \begin{syntax}
%     \cs{ClearBoxProperties}
%   \end{syntax}
%   Removes \emph{all} keys from the property list.
% \end{function}

% \section{Internal functions}
% \subsection{Debugging}

% \begin{variable}{\__propbox_debug_mode_bool}
%   Turns on\slash off debugging mode.
%   This controls almost all log output, and will certainly clutter your log file if set.
%   When set, \pkg{propbox} will show the contents of internal sequences and keys throughout the compile.
%   It is probably hard to follow, so the usefulness of macros dependendent on this remains dubious.
% \end{variable}

% \begin{function}[updated = 2013/08/11]{\propbox_debug_msg:n}
%   \begin{syntax}
%     \cs{propbox_debug_msg:n} \Arg{message}
%   \end{syntax}
%   Types out a message to the console if debug-mode is on.
%   This is often used to check the values of variables during development.
% \end{function}

% \end{documentation}
%
% \begin{implementation}
%
% \section{\pkg{propbox} implementation}
%
% ^^A\TestFiles{m3seq002,m3seq003}
%
%    \begin{macrocode}
%<*initex|package>
%    \end{macrocode}
%
%    \begin{macrocode}
%<@@=propbox>
%    \end{macrocode}
%
% Our story begins with
%   \textsf{xparse}\footnote{\texttt{texdoc xparse}} and
%   \textsf{expl3},\footnote{\texttt{texdoc interface3}}
%   two fantastic packages that make the whole \LaTeX3 world happy.
%
%    \begin{macrocode}
%<*package>
\ProvidesExplPackage
  {\ExplFileName}{\ExplFileDate}{\ExplFileVersion}{\ExplFileDescription}
\__expl_package_check:
%</package>
%    \end{macrocode}
% \subsection{Boxes}
% \begin{variable}{\@@_boxes_seq}
%   
% \end{variable}
% \subsection{Properties}

% \begin{variable}{\@@_properties_clist}
%   This list contains all of the properties that are used for boxes, along with their default values.
%   Thus, it is a bona-fide \pkg{l3keys} specification.
%   Since each property is \emph{supposed} to be a rather simple identifier, a comma-separated list seemed appropriate to store this set.
%    \begin{macrocode}
\clist_new:c { propbox_properties_clist }
%    \end{macrocode}
% \end{variable}


% \begin{macro}{\@@_property_parse}
%   \begin{syntax}
%     \cs{@@_property_parse} \Arg{key}=\Arg{value}
%   \end{syntax}
%   Parses a |key=value| token list into |key| and |token|, storing them into \cs{l_tmpa_tl} and \cs{l_tmpb_tl} respectively.
%    \begin{macrocode}
\def\propbox_property_parse#1=#2{
  \tl_set:Nn \l_tmpa_tl { #1 }
  \tl_set:Nn \l_tmpb_tl { #2 }
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}[updated = 2013/08/11]{\propbox_new_box:nn}
%   When creating a new box, care must be taken so that the new box and its properties are somehow associated with each other.
%   This function does so by generating a name for the box (whose content is given as |#1|) and then
%     using this generated name (say, \cs{gn}) to store the property list, |#2|, as a token list in \cs{gn_properties}.
%   Thus, when retrieving the properties for a box, one only needs to append |_properties| to the control sequence to retrive that box's properties.
%    \begin{macrocode}
\cs_new_protected:Npn { \g_propbox_new_box } #1 #2
 {
%    \end{macrocode}
% Store the generated name into a local temporary token list.
% (It gets very tedious, not to mention inefficient, to type out all the time.)
%    \begin{macrocode}
  \tl_set:Nn \l_tmpa_tl { propbox_box_number_\seq_count:N \@@_boxes_seq }
%    \end{macrocode}
% Store the properties for this box in its own token list.
% This way, the keys can be set easily and simply to determine whether or not to select the box.
%    \begin{macrocode}
  \tl_new:cn { \l_tmpa_tl _properties } { #1 }
%    \end{macrocode}
% Create a new save box of the name \cs{propbox_box_number_N}
% where $N$ is the current number of items in the collection.
% ($N \in \left\{0\right\} \cup \mathbf{N}$.)
% The |minipage| environment is used here to force page-wise sequential output only;
%   this package grew out of a question on the \TeX~Stack~Exchange site, and this seemed appropriate at the time.
%    \begin{macrocode}
  \newsavebox { \use:c { \l_tmpa_tl } }
  \savebox { \use:c { \l_tmpa_tl } } {
    \begin{minipage}{\linewidth}
      #2
    \end{minipage}
  }
%    \end{macrocode}
% Put the handle for the box into the collection of boxes.
%    \begin{macrocode}
  \seq_push:Nv { \@@_boxes_seq }
               { \use:c { \l_tmpa_tl } }
%    \end{macrocode}
%    \begin{macrocode}
 }
%    \end{macrocode}
% \end{macro}




% \subsection{Debugging Utilities}

% \begin{variable}{\@@_debug_mode_bool}
%   Create a toggle to turn on\slash off debug mode.
%    \begin{macrocode}
\bool_new:c { propbox_debug_mode_bool }
%    \end{macrocode}
% \end{variable}


% \begin{macro}{\propbox_debug_msg:n}
%   If \cs{propbox_debug_mode} is set, then \cs{typeout} the argument, |#1|.
%    \begin{macrocode}
\cs_new:Npn \propbox_debug_msg:n #1 {
  \bool_if:NTF \@@_debug_mode_bool
               { \typeout{#1} }
               { } }
%    \end{macrocode}
% \end{macro}




%    \begin{macrocode}
%</initex|package>
%    \end{macrocode}
%
% \end{implementation}
%
% \PrintIndex